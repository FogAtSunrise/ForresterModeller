<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:NodeNetwork.Views;assembly=NodeNetwork"
                    xmlns:controls="clr-namespace:NodeNetwork.Views.Controls;assembly=NodeNetwork"
                    xmlns:viewModels="clr-namespace:NodeNetwork.ViewModels;assembly=NodeNetwork"
                    xmlns:reactiveUi="http://reactiveui.net">

    <Style x:Key="constant" TargetType="{x:Type views:NodeView}">
        <Setter Property="Background" Value="Green"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="TitleFontFamily" Value="Segoe UI Semibold"/>
        <Setter Property="TitleFontSize" Value="18"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="CornerRadius" Value="100"/>
        <Setter Property="EndpointsStackingOrientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="default" TargetType="views:NodeView">
                    <controls:FillPanel x:Name="Container">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="{x:Static views:NodeView.SelectedVisualStatesGroup}">
                                <VisualState Name="{x:Static views:NodeView.SelectedState}">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="-3" 
                                                            Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="3" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="{x:Static views:NodeView.UnselectedState}">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Canvas x:Name="HeaderTopMargin" Width="auto" Height="10"/>


                        <DockPanel>
                            <TextBlock x:Name="NameLabel" TextWrapping="Wrap" Background="Transparent" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center"
                                                   FontFamily="{TemplateBinding TitleFontFamily}" FontSize="{TemplateBinding TitleFontSize}" Margin="40,-40,0,0"/>
                        </DockPanel>


                        <Border x:Name="Border" Margin="10,0,10,0" CornerRadius="{TemplateBinding CornerRadius}"
                                Width="30" Height="30" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Thumb VerticalAlignment="Bottom" Height="10" x:Name="ResizeVerticalThumb" Cursor="SizeNS">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb HorizontalAlignment="Right" Width="10" x:Name="ResizeHorizontalThumb" Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="10" Height="10" x:Name="ResizeDiagonalThumb" Cursor="SizeNWSE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <StackPanel>

                                    <Canvas x:Name="HeaderBottomMargin" Width="auto" Height="3"/>

                                    <ContentPresenter x:Name="LeadingControlPresenter" Style="{TemplateBinding LeadingControlPresenterStyle}"/>

                                    <DockPanel>

                                        <ItemsControl x:Name="OutputsList" IsTabStop="False">
                                            <ItemsControl.Style>
                                                <Style TargetType="ItemsControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                            <Setter Property="DockPanel.Dock" Value="Bottom"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                            <Setter Property="DockPanel.Dock" Value="Right"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ItemsControl.Style>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="viewModels:NodeOutputViewModel">
                                                    <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </DockPanel>
                                    <ItemsControl x:Name="EndpointGroupsList" IsTabStop="False">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="viewModels:EndpointGroupViewModel">
                                                <reactiveUi:ViewModelViewHost ViewModel="{Binding}"
                                                                              HorizontalContentAlignment="Stretch"
                                                                              VerticalContentAlignment="Stretch"
                                                                              IsTabStop="False" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <ContentPresenter x:Name="TrailingControlPresenter" Style="{TemplateBinding TrailingControlPresenterStyle}"/>
                                    <Canvas x:Name="BottomMargin" Width="auto" Height="5"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </controls:FillPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="level" TargetType="{x:Type views:NodeView }">
        <Setter Property="Background" Value="#FFC14646"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="TitleFontFamily" Value="Segoe UI Semibold"/>
        <Setter Property="TitleFontSize" Value="18"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="EndpointsStackingOrientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="default" TargetType="views:NodeView">
                    <controls:FillPanel x:Name="Container">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="{x:Static views:NodeView.SelectedVisualStatesGroup}">
                                <VisualState Name="{x:Static views:NodeView.SelectedState}">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="-3" 
                                                            Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="3" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="{x:Static views:NodeView.UnselectedState}">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border" Margin="10,0,10,0" CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="100" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Thumb VerticalAlignment="Bottom" Height="10" x:Name="ResizeVerticalThumb" Cursor="SizeNS">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb HorizontalAlignment="Right" Width="10" x:Name="ResizeHorizontalThumb" Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <Thumb HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="10" Height="10" x:Name="ResizeDiagonalThumb" Cursor="SizeNWSE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Canvas Background="White" Opacity="0"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Vertical">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="Horizontal">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Resizable}" Value="None">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                                <StackPanel>
                                    <Canvas x:Name="HeaderTopMargin" Width="auto" Height="10"/>
                                    <DockPanel>
                                        <TextBlock x:Name="NameLabel" TextWrapping="Wrap" Background="Transparent" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center"
                                                   FontFamily="{TemplateBinding TitleFontFamily}" FontSize="{TemplateBinding TitleFontSize}" Margin="10,0,0,0"/>
                                        <TextBlock x:Name="FullName" TextWrapping="Wrap" Background="Transparent" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center"
                                                   FontFamily="{TemplateBinding TitleFontFamily}" FontSize="{TemplateBinding TitleFontSize}" Margin="10,0,0,0"/>
                                    </DockPanel>
                                    <Canvas x:Name="HeaderBottomMargin" Width="auto" Height="3"/>

                                    <ContentPresenter x:Name="LeadingControlPresenter" Style="{TemplateBinding LeadingControlPresenterStyle}"/>

                                    <DockPanel>
                                        <ItemsControl x:Name="InputsList" IsTabStop="False">
                                            <ItemsControl.Style>
                                                <Style TargetType="ItemsControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                            <Setter Property="DockPanel.Dock" Value="Top"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                            <Setter Property="DockPanel.Dock" Value="Left"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ItemsControl.Style>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="viewModels:NodeInputViewModel">
                                                    <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <ItemsControl x:Name="OutputsList" IsTabStop="False">
                                            <ItemsControl.Style>
                                                <Style TargetType="ItemsControl">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                            <Setter Property="DockPanel.Dock" Value="Bottom"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                            <Setter Property="DockPanel.Dock" Value="Right"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ItemsControl.Style>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="viewModels:NodeOutputViewModel">
                                                    <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DockPanel>
                                    <ItemsControl x:Name="EndpointGroupsList" IsTabStop="False">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="viewModels:EndpointGroupViewModel">
                                                <reactiveUi:ViewModelViewHost ViewModel="{Binding}"
                                                                              HorizontalContentAlignment="Stretch"
                                                                              VerticalContentAlignment="Stretch"
                                                                              IsTabStop="False" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <ContentPresenter x:Name="TrailingControlPresenter" Style="{TemplateBinding TrailingControlPresenterStyle}"/>
                                    <Canvas x:Name="BottomMargin" Width="auto" Height="5"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </controls:FillPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>